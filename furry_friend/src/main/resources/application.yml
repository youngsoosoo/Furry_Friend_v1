spring:
  datasource:
      url: jdbc:mysql://127.0.0.1:3306/furry
      username: root
      password: inhatc
      driver-class-name: com.mysql.cj.jdbc.Driver

  jpa:
    database:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        #show_sql: true
        format_sql: true

# naver
# registration
  # provider
  spring.security.oauth2.client.provider.naver.authorization-uri=https://nid.naver.com/oauth2.0/authorize
  spring.security.oauth2.client.provider.naver.token-uri=https://nid.naver.com/oauth2.0/token
  spring.security.oauth2.client.provider.naver.user-info-uri=https://openapi.naver.com/v1/nid/me
  spring.security.oauth2.client.provider.naver.user-name-attribute=response

  security:
    oauth2:
      client:
        registration:
          naver:
            client-id: 812354070229-9d7oco87vd901vaapr7504vbgmvaihnb.apps.googleusercontent.com
            client-secret: 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
            redirect-uri: {baseUrl}/{action}/oauth2/code/{registrationId}
            authorization-grant-type: authorization_code
            scope: name,email,mobile
            client-name: Naver

        provider:
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            # Security의 기준이 되는 username의 이름을 네이버에서는 response로 (회원 조회시 반환되는 JSON 형태 때문)
            user-name-attribute: response

  profiles:
    include: oauth